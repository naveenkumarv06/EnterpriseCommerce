{
  "uid" : "d4b5dc34bcdadc61",
  "name" : "test_verify_login_page_title",
  "fullName" : "test_login.Test_Login#test_verify_login_page_title",
  "historyId" : "3b817526f4c59fae2736351084c2d657",
  "time" : {
    "start" : 1620293235658,
    "stop" : 1620293242248,
    "duration" : 6590
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected Title is : User Login , Actual Title is: User Login\nassert not 'User Login' == 'User Login'\n    User Login",
  "statusTrace" : "self = <Tests.test_login.Test_Login object at 0x0000000AC81A8A60>\n\n    def test_verify_login_page_title(self):\n    \n    \n        log = self.get_ogger()\n        login = LoginPage(self.driver)\n        # log.info(\"Getting the Login Page Title\")\n        title = login.get_page_title(TestData.login_page_title)\n        log.info(\"Login Page Title is : {}\".format(title))\n        try:\n>           assert not (title == TestData.login_page_title), \"Expected Title is : {} , Actual Title is: {}\".format(\n            TestData.login_page_title, title)\nE           AssertionError: Expected Title is : User Login , Actual Title is: User Login\nE           assert not 'User Login' == 'User Login'\nE               User Login\n\nTests\\test_login.py:22: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1620293172435,
      "stop" : 1620293234290,
      "duration" : 61855
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected Title is : User Login , Actual Title is: User Login\nassert not 'User Login' == 'User Login'\n    User Login",
    "statusTrace" : "self = <Tests.test_login.Test_Login object at 0x0000000AC81A8A60>\n\n    def test_verify_login_page_title(self):\n    \n    \n        log = self.get_ogger()\n        login = LoginPage(self.driver)\n        # log.info(\"Getting the Login Page Title\")\n        title = login.get_page_title(TestData.login_page_title)\n        log.info(\"Login Page Title is : {}\".format(title))\n        try:\n>           assert not (title == TestData.login_page_title), \"Expected Title is : {} , Actual Title is: {}\".format(\n            TestData.login_page_title, title)\nE           AssertionError: Expected Title is : User Login , Actual Title is: User Login\nE           assert not 'User Login' == 'User Login'\nE               User Login\n\nTests\\test_login.py:22: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9d2c466094fdd2c7",
      "name" : "1263215c-00a2-43cf-a878-082e1c02673a-attachment.png",
      "source" : "9d2c466094fdd2c7.png",
      "type" : "image/png",
      "size" : 30364
    }, {
      "uid" : "b03735b1214ef7a7",
      "name" : "log",
      "source" : "b03735b1214ef7a7.txt",
      "type" : "text/plain",
      "size" : 472
    }, {
      "uid" : "54161d6748ab6b02",
      "name" : "stdout",
      "source" : "54161d6748ab6b02.txt",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "d76ad0456ae51bea",
      "name" : "stderr",
      "source" : "d76ad0456ae51bea.txt",
      "type" : "text/plain",
      "size" : 250
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "setup::0",
    "time" : {
      "start" : 1620293245432,
      "stop" : 1620293264946,
      "duration" : 19514
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup')"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "Test_Login"
  }, {
    "name" : "host",
    "value" : "ASI-PF0LD1W2"
  }, {
    "name" : "thread",
    "value" : "31996-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('setup')" ]
  },
  "source" : "d4b5dc34bcdadc61.json",
  "parameterValues" : [ ]
}
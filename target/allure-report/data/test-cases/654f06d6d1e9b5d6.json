{
  "uid" : "654f06d6d1e9b5d6",
  "name" : "test_verify_login_page_title",
  "fullName" : "test_login.Test_Login#test_verify_login_page_title",
  "historyId" : "3b817526f4c59fae2736351084c2d657",
  "time" : {
    "start" : 1620287533733,
    "stop" : 1620287534281,
    "duration" : 548
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Expected Title is : User Login , Actual Title is: User Login\nassert not 'User Login' == 'User Login'\n    User Login",
  "statusTrace" : "self = <Tests.test_login.Test_Login object at 0x000000E6EEF70760>\n\n    def test_verify_login_page_title(self):\n    \n        log = self.get_ogger()\n        login = LoginPage(self.driver)\n        #log.info(\"Getting the Login Page Title\")\n        title = login.get_page_title(TestData.login_page_title)\n        log.info(\"Login Page Title is : {}\".format(title))\n>       assert not(title == TestData.login_page_title), \"Expected Title is : {} , Actual Title is: {}\".format(TestData.login_page_title, title)\nE       AssertionError: Expected Title is : User Login , Actual Title is: User Login\nE       assert not 'User Login' == 'User Login'\nE           User Login\n\nTests\\test_login.py:18: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1620287476085,
      "stop" : 1620287533724,
      "duration" : 57639
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Expected Title is : User Login , Actual Title is: User Login\nassert not 'User Login' == 'User Login'\n    User Login",
    "statusTrace" : "self = <Tests.test_login.Test_Login object at 0x000000E6EEF70760>\n\n    def test_verify_login_page_title(self):\n    \n        log = self.get_ogger()\n        login = LoginPage(self.driver)\n        #log.info(\"Getting the Login Page Title\")\n        title = login.get_page_title(TestData.login_page_title)\n        log.info(\"Login Page Title is : {}\".format(title))\n>       assert not(title == TestData.login_page_title), \"Expected Title is : {} , Actual Title is: {}\".format(TestData.login_page_title, title)\nE       AssertionError: Expected Title is : User Login , Actual Title is: User Login\nE       assert not 'User Login' == 'User Login'\nE           User Login\n\nTests\\test_login.py:18: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "fb2f1c84a8103c62",
      "name" : "log",
      "source" : "fb2f1c84a8103c62.txt",
      "type" : "text/plain",
      "size" : 472
    }, {
      "uid" : "e323fa5b67b02465",
      "name" : "stdout",
      "source" : "e323fa5b67b02465.txt",
      "type" : "text/plain",
      "size" : 2
    }, {
      "uid" : "2e3df3a3a61411aa",
      "name" : "stderr",
      "source" : "2e3df3a3a61411aa.txt",
      "type" : "text/plain",
      "size" : 250
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "setup::0",
    "time" : {
      "start" : 1620287535563,
      "stop" : 1620287540814,
      "duration" : 5251
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup')"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "Test_Login"
  }, {
    "name" : "host",
    "value" : "ASI-PF0LD1W2"
  }, {
    "name" : "thread",
    "value" : "29880-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('setup')" ]
  },
  "source" : "654f06d6d1e9b5d6.json",
  "parameterValues" : [ ]
}